/{[a-zA-Z0-9_-]+}(->>'[a-zA-Z0-9_-]+')?/                                                       { return COLUMN_IDENTIFIER }
/ABS|abs|CHAR_LENGTH|char_length|CHARACTER_LENGTH|character_length|LOWER|lower|UPPER|upper/    { return COLUMN_OPERATOR }
/,/                                                                                            { return COMMA }
/'(day|dow|doy|epoch|hour|microseconds|milliseconds|minute|month|second|timezone|week|year)'/  { return DATE_ARGUMENT }
/DATE_PART|date_part|DATE_TRUNC|date_trunc/                                                    { return DATE_OPERATOR }
/DIV|div|MOD|mod/                                                                              { return NUMBER_PART_OPERATOR }
/=|<=|>=|<|>|!=| LIKE | like | ILIKE | ilike /                                                 { return OPERATOR }
/IS|is/                                                                                        { return IS }
/NOT|not/                                                                                      { return NOT }
/NULL|null/                                                                                    { return NULL }
/\?/                                                                                           { return VALUE_PLACEHOLDER }
/(FALSE|false|TRUE|true|1::BOOL(EAN)?|0::BOOL(EAN)?)(::BOOL(EAN)?)?/                           { return BOOL_VALUE }
/[-+]?[0-9]+(::INT(EGER)?)?/                                                                   { return INT_VALUE }
/ARRAY|array/                                                                                  { return ARRAY_OPERATOR }
/\[/                                                                                           { return LEFT_BRACKET }
/\]/                                                                                           { return RIGHT_BRACKET }
/'([^']|'')+'(::[A-Z]+)?/                                                                      { return QUOTED_VALUE }
/ANY|any/                                                                                      { return ANY }
/ AND | and | OR | or /                                                                        { return CONJUNCTION }
/\(/                                                                                           { return LEFT_PARENTHESIS }
/\)/                                                                                           { return RIGHT_PARENTHESIS }
/[ \t\n\f\r]+/                                                                                 { /* eat up whitespace */ }
/./                                                                                            { return UNKNOWN }
//
package selectorconfigparser
